package maintel.commontest.entity;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import maintel.commontest.bean.LockBeanTemp;
import maintel.commontest.entity.Book;
import maintel.commontest.entity.User;
import maintel.commontest.entity.UserTemp;

import maintel.commontest.entity.LockBeanTempDao;
import maintel.commontest.entity.BookDao;
import maintel.commontest.entity.UserDao;
import maintel.commontest.entity.UserTempDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig lockBeanTempDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userTempDaoConfig;

    private final LockBeanTempDao lockBeanTempDao;
    private final BookDao bookDao;
    private final UserDao userDao;
    private final UserTempDao userTempDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        lockBeanTempDaoConfig = daoConfigMap.get(LockBeanTempDao.class).clone();
        lockBeanTempDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userTempDaoConfig = daoConfigMap.get(UserTempDao.class).clone();
        userTempDaoConfig.initIdentityScope(type);

        lockBeanTempDao = new LockBeanTempDao(lockBeanTempDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userTempDao = new UserTempDao(userTempDaoConfig, this);

        registerDao(LockBeanTemp.class, lockBeanTempDao);
        registerDao(Book.class, bookDao);
        registerDao(User.class, userDao);
        registerDao(UserTemp.class, userTempDao);
    }
    
    public void clear() {
        lockBeanTempDaoConfig.clearIdentityScope();
        bookDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userTempDaoConfig.clearIdentityScope();
    }

    public LockBeanTempDao getLockBeanTempDao() {
        return lockBeanTempDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserTempDao getUserTempDao() {
        return userTempDao;
    }

}
